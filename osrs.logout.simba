{$DEFINE INCLUDED_RSLOGOUT}
{$include_once osrs.simba}

type
  TRSLogout = record
    ElementCurrentWorld: TRSInterfaceElement;
    ElementLogout: TRSInterfaceElement;
    ElementWorldSwitcher: TRSInterfaceElement;
    ElementWorldSwitcherClose: TRSInterfaceElement;

    Bounds: TBox;
  end;

function TRSLogout.IsOpen: Boolean;
begin
  Result := RSGameTabs.IsCurrentTab(ERSGameTab.LOGOUT);
end;

function TRSLogout.Open: Boolean;
begin
  Result := RSGameTabs.Open(ERSGameTab.LOGOUT);
end;

function TRSLogout.OpenWorldSwitcher: Boolean;
begin
  if Self.Open() and (not Self.IsWorldSwitcherOpen()) then
  begin
    Self.ElementWorldSwitcher.Click();

    Result := SleepUntil(Self.IsWorldSwitcherOpen(), RandomLeft(100, 1000), 2000);
  end;
end;

function TRSLogout.GetCurrentWorld: Integer;
var
  Text: String;
begin
  if Self.IsOpen() then
  begin
    while Self.ElementCurrentWorld.HasText('Loading', [RSColors.TEXT_ORANGE], 1, FONT_BOLD) do
      Sleep(50);

    Text := Self.ElementCurrentWorld.ReadText([RSColors.TEXT_ORANGE], 0, FONT_BOLD);
    Result := Text.After('- ').ToInt(-1);
  end;
end;

function TRSLogout.IsWorldSwitcherOpen: Boolean;
begin
  Result := Self.GetCurrentWorld() > 0;
end;

function TRSLogout.CloseWorldSwitcher: Boolean;
begin
  if not Self.IsWorldSwitcherOpen() then
    Exit(True);

  Self.ElementWorldSwitcherClose.Click();
  Result := SleepUntil(not Self.IsWorldSwitcherOpen(), RandomLeft(100, 1000), 3000);
end;

function TRSLogout.ClickLogout(Attempts: Int32 = 5; TryTime: Int32 = 20000): Boolean;
var
  Interval: Integer;
begin
  if not Self.Open() or (not Self.CloseWorldSwitcher()) then
    Exit(False);

  Interval := TryTime div Attempts;

  for 1 to Attempts do
  begin
    Self.ElementLogout.Click();
    if RSClient.IsLoggedOut(Interval + Random(-1000, 1000)) then
      Exit(True);
  end;
end;

procedure TRSLogout.Setup;
begin
  Self.Bounds := RSGameTabs.TabBounds;

  Self.ElementCurrentWorld       := TRSInterfaceElement.Create(Self.Bounds, 'ElementCurrentWorld', [20, 2, 147, 18, False]);
  Self.ElementLogout             := TRSInterfaceElement.Create(Self.Bounds, 'ElementLogout', [29, 216, 131, 23, False]);
  Self.ElementWorldSwitcher      := TRSInterfaceElement.Create(Self.Bounds, 'ElementWorldSwitcher', [29, 168, 131, 23, False]);
  Self.ElementWorldSwitcherClose := TRSInterfaceElement.Create(Self.Bounds, 'ElementWorldSwitcherClose', [170, 3, 18, 18, False]);
end;

var
  RSLogout: TRSLogout;
