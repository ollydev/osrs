{$DEFINE INCLUDED_MAINSCREEN}
{$include_once osrs.simba}

type
  TRSMainScreen = record
    Bounds: TBox;
    UptextBounds: TBox;
    UptextOCR: TPixelOCR;
  end;

procedure TRSMainScreen.Setup;
begin
  case RSClient.ClientMode() of
    ERSClientMode.FIXED:
      begin
        Self.Bounds := [4,4, 515, 337];
        Self.UptextBounds := [7, 7, 500, 25];
      end;

    ERSClientMode.RESIZABLE_CLASSIC,
    ERSClientMode.RESIZABLE_MODERN:
      begin
        Self.Bounds := Target.Bounds;
        Self.UptextBounds := [3, 3, 500, 21];
      end;
  end;

  Self.UptextOCR.Tolerance := 25;
  Self.UptextOCR.ShadowTolerance := 65;
  Self.UptextOCR.Whitelist := ['a'..'z', 'A'..'Z', '0'..'9', '-', '>', '(', ')', '/'];
end;

function TRSMainScreen.GetUpText: String;
var
  img: TImage;
begin
  img := TImage.CreateFromTarget(Self.UptextBounds);
  Result := Self.UptextOCR.Recognize(img, FONT_BOLD_SHADOW, [0,0]);
  img.Free();
end;

function TRSMainScreen.GetUpTextSimilarity(Target: String): Double;
var
  Text: String;
begin
  Text := Self.GetUpText();
  if ('/' in Text) then
    Text := Text.Before('/');

  Result := Text.Similarity(Target);
end;

function TRSMainScreen.IsUpText(Target: String; Similarity: Double): Boolean; overload;
begin
  Result := Self.GetUpTextSimilarity(Target) >= Similarity;
end;

function TRSMainScreen.IsUpText(SubStrings: TStringArray): Boolean; overload;
begin
  Result := Self.GetUpText().ContainsAny(SubStrings, True);
end;

var
  MainScreen: TRSMainScreen;
