{$DEFINE INCLUDED_LOGOUT}
{$include_once osrs.simba}

type
  ERSOptionsSubTab = enum(UNKNOWN, CONTROLS, AUDIO, DISPLAY);

  TRSOptionsTab = record
    ElementZoom: TRSInterfaceElementNew;
    ElementControlTab: TRSInterfaceElementNew;
    ElementAudioTab: TRSInterfaceElementNew;
    ElementDisplayTab: TRSInterfaceElementNew;

    Bounds: TBox;
  end;

function TRSOptionsTab.IsOpen: Boolean;
begin
  Result := GameTabs.IsCurrentTab(ERSGameTab.OPTIONS);
end;

function TRSOptionsTab.Open: Boolean;
begin
  Result := GameTabs.Open(ERSGameTab.OPTIONS);
end;

function TRSOptionsTab.GetZoom: Integer;
const
  COLOR_SLIDER_BORDER := ColorTolerance($131515, 4.585, EColorSpace.HSL, [0.040, 1.601, 1.361]);
var
  SliderBounds: TBox;
  SliderX: Integer;
begin
  if Self.OpenTab(ERSOptionsSubTab.DISPLAY) then
  begin
    SliderX := Target.FindColor(COLOR_SLIDER_BORDER, Self.ElementZoom.Bounds).Bounds.X2;
    if (SliderX > 0) then
      Result := Round(((SliderX - Self.ElementZoom.Bounds.X1) / (Self.ElementZoom.Bounds.Width - 1)) * 100);
  end;
end;

function TRSOptionsTab.GetCurrentTab: ERSOptionsSubTab;
begin
  if Self.Open() then
  begin
    if Self.ElementControlTab.HasColor($29353E) then Exit(ERSOptionsSubTab.CONTROLS);
    if Self.ElementAudioTab.HasColor($29353E)   then Exit(ERSOptionsSubTab.AUDIO);
    if Self.ElementDisplayTab.HasColor($29353E) then Exit(ERSOptionsSubTab.DISPLAY);
  end;
end;

function TRSOptionsTab.OpenTab(Tab: ERSOptionsSubTab): Boolean;
begin
  if (Self.GetCurrentTab() = Tab) then
    Exit(True);

  case Tab of
    ERSOptionsSubTab.CONTROLS: Self.ElementControlTab.Click();
    ERSOptionsSubTab.AUDIO:    Self.ElementAudioTab.Click();
    ERSOptionsSubTab.DISPLAY:  Self.ElementDisplayTab.Click();
  end;

  Result := SleepUntil(Self.GetCurrentTab() = Tab, RandomLeft(100, 1000), 3000);
end;

procedure TRSOptionsTab.Setup;
begin
  Self.Bounds := GameTabs.TabBounds;

  Self.ElementZoom       := TRSInterfaceElementNew.Create(Self.Bounds, 'ElementZoom', [66, 110, 96, 7, False]);
  Self.ElementControlTab := TRSInterfaceElementNew.Create(Self.Bounds, 'ElementControlTab', [2, 8, 57, 21, False]);
  Self.ElementAudioTab   := TRSInterfaceElementNew.Create(Self.Bounds, 'ElementAudioTab', [66, 8, 57, 21, False]);
  Self.ElementDisplayTab := TRSInterfaceElementNew.Create(Self.Bounds, 'ElementDisplayTab', [130, 8, 57, 21, False]);
end;

var
  Options: TRSOptionsTab;
